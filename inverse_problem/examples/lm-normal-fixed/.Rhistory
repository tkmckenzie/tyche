install.packages("rstan")
Sys.getenv("http_proxy")
file.edit("~/.Renviron")
Sys.getenv("http_proxy")
install.packages("rstan")
365 / 12
365 / 12 / 28
install.packages("StanHeaders", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("StanHeaders", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
example(stan_model, package = "rstan", run.dontrun = TRUE)
install.packages("StanHeaders", repos = c("http://mc-stan.org/r-packages/", getOption("repos")))
install.packages("rstan", repos = c("http://mc-stan.org/r-packages/", getOption("repos")))
example(stan_model, package = "rstan", run.dontrun = TRUE)
source("~/git/tyche/inverse_problem/lm_known_inputdist/3_nuts_inverse_downscale.R", echo=TRUE)
source("~/git/tyche/inverse_problem/examples/lm_normal/1_generate_data.R", echo=TRUE)
setwd("~/git/tyche/inverse_problem/examples/lm_normal")
source("~/git/tyche/inverse_problem/examples/lm_normal/1_generate_data.R", echo=TRUE)
source("~/git/tyche/inverse_problem/examples/lm_normal/1_generate_data.R", echo=TRUE)
beta
alpha = runif(k, -5, 5)
source("~/git/tyche/inverse_problem/examples/lm_normal/1_generate_data.R", echo=TRUE)
source("~/git/tyche/inverse_problem/examples/lm_normal/1_generate_data.R", echo=TRUE)
Sigma.X = matrix(c(4.5, -0.75, -0.75, 1.25), nrow = 2)
source("~/git/tyche/inverse_problem/examples/lm_normal/1_generate_data.R", echo=TRUE)
source("~/git/tyche/inverse_problem/examples/lm_normal/1_generate_data.R", echo=TRUE)
source("~/git/tyche/inverse_problem/examples/lm_normal/2_nuts_lm.R", echo=TRUE)
setwd("~/git/tyche/inverse_problem/examples/lm_normal")
source("~/git/tyche/inverse_problem/examples/lm_normal/2_nuts_lm.R", echo=TRUE)
source("~/git/tyche/inverse_problem/examples/lm_normal/2_nuts_lm.R", echo=TRUE)
df.X = data.frame(X)
source("~/git/tyche/inverse_problem/examples/lm_normal/1_generate_data.R", echo=TRUE)
df.X
ggplot(df.X, aes(X.1, X.2)) +
geom_density_2d_filled()
ggplot(df.X, aes(X1, X2)) +
geom_density_2d_filled()
ggplot(df.X, aes(X1, X2)) +
geom_density_2d_filled() +
theme_bw()
ggplot(df.X, aes(X1, X2)) +
geom_density_2d_filled() +
theme_bw() +
theme(legend.position = "top")
ggplot(df.X, aes(X1, X2)) +
geom_density_2d_filled() +
theme_bw() +
theme(legend.position = "none")
ggplot(df.y, aes(y)) +
geom_density(fill = "black", alpha = 0.25) +
theme_bw()
df.y = data.frame(y)
ggplot(df.y, aes(y)) +
geom_density(fill = "black", alpha = 0.25) +
theme_bw()
source("~/git/tyche/inverse_problem/examples/lm_normal/1_generate_data.R", echo=TRUE)
