install.packages("rstan")
Sys.getenv("http_proxy")
file.edit("~/.Renviron")
Sys.getenv("http_proxy")
install.packages("rstan")
365 / 12
365 / 12 / 28
install.packages("StanHeaders", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("StanHeaders", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
example(stan_model, package = "rstan", run.dontrun = TRUE)
install.packages("StanHeaders", repos = c("http://mc-stan.org/r-packages/", getOption("repos")))
install.packages("rstan", repos = c("http://mc-stan.org/r-packages/", getOption("repos")))
example(stan_model, package = "rstan", run.dontrun = TRUE)
example(stan_model, package = "rstan", run.dontrun = TRUE)
source("~/git/tyche/inverse_problem/lm/2_nuts_known_params.R", echo=TRUE)
source("~/git/tyche/inverse_problem/lm/2_nuts_known_params.R", echo=TRUE)
?extract
stan.extract = rstan::extract(stan.fit)
df.y = data.frame(y = y)
df.X.obs = data.frame(X = X) %>% pivot_longer(starts_with("X")) %>% mutate(series = "obs")
df.X.fit = data.frame(X = stan.extract$X_i) %>% pivot_longer(starts_with("X")) %>% mutate(series = "fit")
df.X = rbind(df.X.obs, df.X.fit)
df.X.actual = data.frame(X.int = X[obs.number,], name = paste0("X.", 1:ncol(X)))
ggplot(df.y, aes(y)) +
geom_density(fill = "black", alpha = 0.25) +
geom_vline(xintercept = stan.data$y_i, color = "darkred") +
theme_bw()
ggplot() +
geom_density(data = df.X, aes(x = value, color = series, fill = series), alpha = 0.25) +
geom_vline(data = df.X.actual, aes(xintercept = X.int)) +
facet_wrap(~ name, ncol = 2) +
theme_bw()
